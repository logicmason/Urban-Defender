import mochi.as2.*;import ui.*;import Score;/** **  TODO: MochiSocial data calls (blocked) **/class Core{    public static var RESIZED:String = "onResized";    private static var _dispatcher:MochiEventDispatcher = new MochiEventDispatcher();                public static function init():Void    {        Stage.addListener( Core );                EventLog.init();        LinkTracking.init();        MochiServices.addEventListener( MochiServices.CONNECTED, returnToMain );        MochiSocial.addEventListener( MochiSocial.LOGGED_IN, returnToMain );        MochiSocial.addEventListener( MochiSocial.LOGGED_OUT, returnToMain );        Coins.init();        UserProperties.init();        Ads.init();        Social.init();        popup(  "Welcome to the API Example!\n" +                "Click these notices to dismiss them.\n\n" +                 "The main menu will appear once\nMochi Services finishes initalizing." );            }        public static function addEventListener( name:String, self, that ):Void    {        _dispatcher.addEventListener( name, self, that );    }    public static function removeEventListener( name:String, self, that ):Void    {        _dispatcher.removeEventListener( name, self, that );    }    private static function onResize():Void    {        _dispatcher.triggerEvent(RESIZED);    }    public static function get menu():Menu    {        return new Menu( "Mochi Media Services API " + MochiServices.getVersion(), [            new MenuItem( showAdsMenu, 'Ads API' ),           new MenuItem( showCoinsMenu, 'Coins API' ),           new MenuItem( showSocialMenu, 'Social Networking API' ),           new MenuItem( showUserPropertiesMenu, 'User Properties API' ),           new MenuItem( newBallGame, 'Score enabled game example' )        ] );    }            public static function popup( message:String ):Void    {        Notification.create( message );    }    public static function newBallGame():Void    {        Score.create();        hideMenu();    }    public static function hideMenu():Void    {        Menu.menu = null;    }        public static function returnToMain():Void    {        Menu.menu = Core.menu;    }    public static function showAdsMenu():Void    {        Menu.menu = Ads.menu;    }        public static function showUserPropertiesMenu():Void    {        Menu.menu = UserProperties.menu;    }        public static function showCoinsMenu():Void    {        Menu.menu = Coins.menu;    }        public static function showSocialMenu():Void    {        Menu.menu = Social.menu;    }}